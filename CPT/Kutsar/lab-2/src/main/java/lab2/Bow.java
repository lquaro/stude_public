package lab2;

public class Bow extends RangedWeapon {
    private double drawWeight; // —Å–∏–ª–∞ –Ω–∞—Ç—è–∂–µ–Ω–∏—è (–∫–≥—Å)
    private int arrows;        // –∫–æ–ª-–≤–æ —Å—Ç—Ä–µ–ª

    public Bow() {
        this("–û—Ö–æ—Ç–Ω–∏—á–∏–π –ª—É–∫", 9.0, 1.2, 80.0, 18.0, 10);
    }

    public Bow(String name, double damage, double weight, double range,
               double drawWeight, int arrows) {
        super(name, damage, weight, range);
        this.drawWeight = drawWeight;
        this.arrows = Math.max(0, arrows);
    }

    public double getDrawWeight() {
        return drawWeight;
    }

    public void setDrawWeight(double drawWeight) {
        if (drawWeight <= 0) throw new IllegalArgumentException("–°–∏–ª–∞ –Ω–∞—Ç—è–∂–µ–Ω–∏—è > 0");
        this.drawWeight = drawWeight;
    }

    public int getArrows() {
        return arrows;
    }

    public void setArrows(int arrows) {
        this.arrows = Math.max(0, arrows);
    }

    @Override
    public void attack() {
        if (arrows <= 0) {
            System.out.println("üèπ –°—Ç—Ä–µ–ª –Ω–µ—Ç! –í—ã—Å—Ç—Ä–µ–ª –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.");
            return;
        }
        arrows--;
        System.out.printf("üèπ –í—ã—Å—Ç—Ä–µ–ª –∏–∑ –ª—É–∫–∞ (—Å–∏–ª–∞ –Ω–∞—Ç—è–∂–µ–Ω–∏—è %.1f –∫–≥—Å). –£—Ä–æ–Ω: %.1f. –û—Å—Ç–∞–ª–æ—Å—å —Å—Ç—Ä–µ–ª: %d%n",
                drawWeight, getDamage(), arrows);
    }

    public void reload(int add) {
        if (add <= 0) return;
        arrows += add;
        System.out.printf("–ü–æ–ø–æ–ª–Ω–µ–Ω–æ —Å—Ç—Ä–µ–ª: +%d. –í—Å–µ–≥–æ: %d%n", add, arrows);
    }

    // –ü–æ–∫–∞–∂–µ–º –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º ‚Äî –ª—É–∫ ¬´–Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç¬ª –î–ü–° —É–º–µ–Ω—å—à–µ–Ω–∏–µ–º –∏–∑-–∑–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    @Override
    public double dps(double shotsPerSecond) {
        // –ø—Ä–æ—Å—Ç–∞—è –º–æ–¥–µ–ª—å: –∫–∞–∂–¥—ã–µ 10 –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ —Ç–µ—Ä—è–µ–º 1 ¬´—à–æ—Ç¬ª –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫—É
        double penalty = Math.floor(shotsPerSecond / 10.0);
        return getDamage() * Math.max(0, shotsPerSecond - penalty);
    }

    @Override
    public String toString() {
        return super.toString() + String.format(", drawWeight=%.1f, arrows=%d",
                drawWeight, arrows);
    }
}
